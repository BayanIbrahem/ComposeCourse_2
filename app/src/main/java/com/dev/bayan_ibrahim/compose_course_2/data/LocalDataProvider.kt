package com.dev.bayan_ibrahim.compose_course_2.data

import com.dev.bayan_ibrahim.compose_course_2.R
import com.dev.bayan_ibrahim.compose_course_2.domain.model.Place
import java.lang.Math.random
import kotlin.math.absoluteValue

object LocalDataProvider {
    val allCafes = listOf<Place.Cafe> (
        Place.Cafe(
            name = "Love Birds",
            imageRes = R.drawable.cafe_1,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 1f,
            unitPriceAverageDescription = "drink",
        ),
        Place.Cafe(
            name = "Study hub",
            imageRes = R.drawable.cafe_2,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 1.5f,
            unitPriceAverageDescription = "drink",
        ),
        Place.Cafe(
            name = "Friendship cafe~",
            imageRes = R.drawable.cafe_3,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 2.5f,
            unitPriceAverageDescription = "drink",
        ),
        Place.Cafe(
            name = "Love Birds",
            imageRes = R.drawable.cafe_1,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 1f,
            unitPriceAverageDescription = "drink",
        ),
        Place.Cafe(
            name = "Study hub",
            imageRes = R.drawable.cafe_2,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 1.5f,
            unitPriceAverageDescription = "drink",
        ),
        Place.Cafe(
            name = "Friendship cafe~",
            imageRes = R.drawable.cafe_3,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 2.5f,
            unitPriceAverageDescription = "drink",
        ),
        Place.Cafe(
            name = "Love Birds",
            imageRes = R.drawable.cafe_1,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 1f,
            unitPriceAverageDescription = "drink",
        ),
        Place.Cafe(
            name = "Study hub",
            imageRes = R.drawable.cafe_2,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 1.5f,
            unitPriceAverageDescription = "drink",
        ),
        Place.Cafe(
            name = "Friendship cafe~",
            imageRes = R.drawable.cafe_3,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 2.5f,
            unitPriceAverageDescription = "drink",
        ),
        Place.Cafe(
            name = "Love Birds",
            imageRes = R.drawable.cafe_1,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 1f,
            unitPriceAverageDescription = "drink",
        ),
        Place.Cafe(
            name = "Study hub",
            imageRes = R.drawable.cafe_2,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 1.5f,
            unitPriceAverageDescription = "drink",
        ),
        Place.Cafe(
            name = "Friendship cafe~",
            imageRes = R.drawable.cafe_3,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 2.5f,
            unitPriceAverageDescription = "drink",
        ),
    )
    val allRestaurants = listOf<Place.Restaurant> (
        Place.Restaurant(
            name = "Luxurious Birds",
            imageRes = R.drawable.restaurant_1,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 200f,
            unitPriceAverageDescription = "meal",
        ),
        Place.Restaurant(
            name = "Health hub",
            imageRes = R.drawable.restaurant_2,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 50f,
            unitPriceAverageDescription = "meal",
        ),
        Place.Restaurant(
            name = "Friendship restaurant~",
            imageRes = R.drawable.restaurant_3,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 15f,
            unitPriceAverageDescription = "meal",
        ),
        Place.Restaurant(
            name = "Luxurious Birds",
            imageRes = R.drawable.restaurant_1,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 200f,
            unitPriceAverageDescription = "meal",
        ),
        Place.Restaurant(
            name = "Health hub",
            imageRes = R.drawable.restaurant_2,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 50f,
            unitPriceAverageDescription = "meal",
        ),
        Place.Restaurant(
            name = "Friendship restaurant~",
            imageRes = R.drawable.restaurant_3,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 15f,
            unitPriceAverageDescription = "meal",
        ),
        Place.Restaurant(
            name = "Luxurious Birds",
            imageRes = R.drawable.restaurant_1,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 200f,
            unitPriceAverageDescription = "meal",
        ),
        Place.Restaurant(
            name = "Health hub",
            imageRes = R.drawable.restaurant_2,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 50f,
            unitPriceAverageDescription = "meal",
        ),
        Place.Restaurant(
            name = "Friendship restaurant~",
            imageRes = R.drawable.restaurant_3,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 15f,
            unitPriceAverageDescription = "meal",
        ),
    )
    val allHotels = listOf<Place.Hotel>(
        Place.Hotel(
            name = "Luxurious Birds",
            imageRes = R.drawable.hotel_1,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 500f,
            unitPriceAverageDescription = "day",
        ),
        Place.Hotel(
            name = "Health hub",
            imageRes = R.drawable.hotel_2,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 50f,
            unitPriceAverageDescription = "day",
        ),
        Place.Hotel(
            name = "Friendship hotel~",
            imageRes = R.drawable.hotel_3,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 15f,
            unitPriceAverageDescription = "day",
        ),
    )
    val defaultCafe = Place.Cafe(
            name = "Love Birds",
            imageRes = R.drawable.cafe_1,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 1f,
            unitPriceAverageDescription = "drink",
    )
    val defaultRestaurant = Place.Restaurant(
            name = "Luxurious Birds",
            imageRes = R.drawable.restaurant_1,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 200f,
            unitPriceAverageDescription = "meal",
    )
    val defaultHotel = Place.Hotel(
            name = "Luxurious Birds",
            imageRes = R.drawable.hotel_1,
            rate = (1..5).random().toFloat(),
            description = R.string.description,
            location = "in the middle of the city",
            unitPriceAverage = 500f,
            unitPriceAverageDescription = "day",
    )
    val allPlaces = mutableListOf<Place>().apply {
        this.addAll(allCafes)
        this.addAll(allRestaurants)
        this.addAll(allHotels)
    }
}